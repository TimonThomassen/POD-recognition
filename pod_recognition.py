# -*- coding: utf-8 -*-
"""POD recognition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jtwI5zsXHA6xYM8141H4TRtpf1WDNMMz

# setupp

In this cell the needed packages are installed.
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install ultralytics
# %pip install roboflow
import ultralytics
from PIL import Image
import cv2
from ultralytics import YOLO
ultralytics.checks()

"""# Testrun

In this cell a testrun is done on an image. This is needed to download all the assets
"""

# Or you can run inference directly on an online image.
!yolo predict model=yolov8n.pt source='https://media.wired.com/photos/593256b42a990b06268a9e21/master/w_2240,c_limit/traffic-jam-getty.jpg'

"""# Extracting photos from dataset

In this cell the photos that are labelled by roboflow are extracted and loaded into python
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/
roboflow_url = "https://app.roboflow.com/ds/fbIYYSyup0?key=i0vUG6RpTc"
!curl -L $roboflow_url > roboflow.zip; unzip roboflow.zip; rm roboflow.zip
# You should make sure to have a validation set. If you don't have one you can copy your train set.
!cp -r train/. valid/

"""# Training

In this cell the model is trained based on the dataset that is extracted above.
"""

# Train YOLOv8n on COCO8 for 30 epochs
!yolo train model=yolov8s.pt data=data.yaml epochs=30 imgsz=640

"""# Detecting  photos

A test run of 10 photos is done. This contains 7 good photos, 2 blurry photo and 1 photo which shows to much.
"""

import os
traindirs = os.listdir("/content/runs/detect/")
traindirs = sorted(traindirs)
# Get the weights from the last training run
traindir = traindirs[-1]
print(traindir)

model = YOLO(f"/content/runs/detect/{traindir}/weights/last.pt")
results = model.predict(source="/content/Test images", show=False, save=True) # Display preds. Accepts all YOLO predict arguments